<?php

namespace ContainerXoXtqQV;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_KZOG2ZService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.kZOG2_Z' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.kZOG2_Z'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'assuranceRepository' => ['privates', 'App\\Repository\\AssuranceRepository', 'getAssuranceRepositoryService', true],
            'budgetRepository' => ['privates', 'App\\Repository\\BudgetRepository', 'getBudgetRepositoryService', true],
            'certificationRepository' => ['privates', 'App\\Repository\\CertificationRepository', 'getCertificationRepositoryService', true],
            'congeRepository' => ['privates', 'App\\Repository\\CongeRepository', 'getCongeRepositoryService', true],
            'employeeRepository' => ['privates', 'App\\Repository\\EmployeeRepository', 'getEmployeeRepositoryService', true],
            'entretienRepository' => ['privates', 'App\\Repository\\EntretienRepository', 'getEntretienRepositoryService', true],
            'formationRepository' => ['privates', 'App\\Repository\\FormationRepository', 'getFormationRepositoryService', true],
            'offreemploiRepository' => ['privates', 'App\\Repository\\OffreemploiRepository', 'getOffreemploiRepositoryService', true],
        ], [
            'assuranceRepository' => 'App\\Repository\\AssuranceRepository',
            'budgetRepository' => 'App\\Repository\\BudgetRepository',
            'certificationRepository' => 'App\\Repository\\CertificationRepository',
            'congeRepository' => 'App\\Repository\\CongeRepository',
            'employeeRepository' => 'App\\Repository\\EmployeeRepository',
            'entretienRepository' => 'App\\Repository\\EntretienRepository',
            'formationRepository' => 'App\\Repository\\FormationRepository',
            'offreemploiRepository' => 'App\\Repository\\OffreemploiRepository',
        ]);
    }
}
